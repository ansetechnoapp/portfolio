---
// Composant SEO pour ajouter automatiquement les balises meta et Schema.org à chaque page
import SchemaOrg from "./SchemaOrg.astro";

interface Props {
  title?: string;
  description?: string;
  image?: string;
  canonicalURL?: URL | string;
  type?: string;
  article?: {
    publishedTime?: string;
    modifiedTime?: string;
    tags?: string[];
    authors?: string[];
  };
  og?: {
    title?: string;
    description?: string;
    image?: string;
    type?: string;
  };
  twitter?: {
    title?: string;
    description?: string;
    image?: string;
    card?: string;
  };
}

import dataUser from "../data/User.json";

// Enhanced default values with better SEO optimization
const defaultTitle = `${dataUser.firstName} ${dataUser.lastName} - Expert Développeur Web & Mobile | React, Astro.js, React Native`;
const defaultDescription = `Portfolio professionnel de ${dataUser.firstName} ${dataUser.lastName}, développeur web et mobile freelance basé à ${dataUser.address.city}. Spécialisé en React, React Native, Astro.js, Next.js et technologies web modernes. Création d'applications web et mobiles performantes.`;

const {
  title = defaultTitle,
  description = defaultDescription,
  image = "/assets/social-preview.jpg",
  canonicalURL = new URL(Astro.url.pathname, Astro.site),
  type = "website",
  article,
  og,
  twitter,
} = Astro.props;

// Construire l'URL complète de l'image
const socialImageURL = new URL(image, Astro.site).href;

// Déterminer le type de schéma Schema.org
let schemaType = "Person";
if (type === "article") {
  schemaType = "Article";
} else if (Astro.url.pathname.includes("/work/")) {
  schemaType = "CreativeWork";
}

// Construire les données pour Open Graph
const ogData = {
  title: og?.title || title,
  description: og?.description || description,
  image: og?.image || socialImageURL,
  type: og?.type || type,
};

// Construire les données pour Twitter Card
const twitterData = {
  title: twitter?.title || title,
  description: twitter?.description || description,
  image: twitter?.image || socialImageURL,
  card: twitter?.card || "summary_large_image",
};
---

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />
<meta name="author" content={`${dataUser.firstName} ${dataUser.lastName}`} />
<!-- Enhanced keywords with location and specific technologies -->
<meta
  name="keywords"
  content={`développeur web ${dataUser.address.city}, développeur mobile ${dataUser.address.country}, React developer, React Native, Astro.js, Next.js, TypeScript, JavaScript, freelance developer, portfolio, ${dataUser.firstName} ${dataUser.lastName}, développement web, application mobile, frontend, backend, Supabase, Firebase, Tailwind CSS`}
/>

<!-- Additional SEO meta tags -->
<meta name="robots" content="index, follow, max-image-preview:large, max-snippet:-1, max-video-preview:-1" />
<meta name="googlebot" content="index, follow" />
<meta name="bingbot" content="index, follow" />
<meta name="language" content="fr-FR" />
<meta name="geo.region" content={dataUser.address.country} />
<meta name="geo.placename" content={dataUser.address.city} />
<meta name="geo.position" content="6.3703;2.3912" /> <!-- Coordinates for Cotonou, Benin -->
<meta name="ICBM" content="6.3703, 2.3912" />

<!-- Professional and business meta tags -->
<meta name="classification" content="Business" />
<meta name="category" content="Technology, Web Development, Mobile Development" />
<meta name="coverage" content="Worldwide" />
<meta name="distribution" content="Global" />
<meta name="rating" content="General" />
<meta name="revisit-after" content="7 days" />

<!-- Social media and contact -->
<meta name="contact" content={dataUser.email} />
<meta name="reply-to" content={dataUser.email} />

<!-- Performance and technical -->
<meta name="theme-color" content="#6366f1" />
<meta name="msapplication-TileColor" content="#6366f1" />

<meta name="apple-mobile-web-app-status-bar-style" content="default" />
<meta name="format-detection" content="telephone=yes" />
<link rel="canonical" href={canonicalURL} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content={ogData.type} />
<meta property="og:url" content={canonicalURL} />
<meta property="og:title" content={ogData.title} />
<meta property="og:description" content={ogData.description} />
<meta property="og:image" content={ogData.image} />

{
  article && (
    <>
      {article.publishedTime && (
        <meta
          property="article:published_time"
          content={article.publishedTime}
        />
      )}
      {article.modifiedTime && (
        <meta property="article:modified_time" content={article.modifiedTime} />
      )}
      {article.tags &&
        article.tags.map((tag) => (
          <meta property="article:tag" content={tag} />
        ))}
      {article.authors &&
        article.authors.map((author) => (
          <meta property="article:author" content={author} />
        ))}
    </>
  )
}

<!-- Twitter -->
<meta property="twitter:card" content={twitterData.card} />
<meta property="twitter:url" content={canonicalURL} />
<meta property="twitter:title" content={twitterData.title} />
<meta property="twitter:description" content={twitterData.description} />
<meta property="twitter:image" content={twitterData.image} />

<!-- Schema.org Structured Data -->
<SchemaOrg
  type={schemaType}
  name={title}
  description={description}
  image={image}
  datePublished={article?.publishedTime || new Date().toISOString()}
  dateModified={article?.modifiedTime || new Date().toISOString()}
  url={canonicalURL}
/>

<!-- Balises meta essentielles -->
<meta charset="UTF-8" />
<meta name="generator" content={Astro.generator} />
<meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover, maximum-scale=5, minimum-scale=1" />
