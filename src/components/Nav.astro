---
import Icon from "./reactJS/Icon";
import ThemeToggle from "./ThemeToggle.astro";
import type { iconPaths } from "./IconPaths";

/** Main menu items */
const textLinks: { label: string; href: string }[] = [
  { label: "Home", href: "/" },
  { label: "Project", href: "/work/" },
  // { label: 'My components', href: '/components/' },
  { label: "Blog", href: "/blog/" },
  { label: "Tools", href: "/widgetCss/" },
  // { label: 'Cv', href: '/portfolio/Cv/' },
];

/** Icon links to social media â€” edit these with links to your profiles! */
const iconLinks: {
  label: string;
  href: string;
  icon: keyof typeof iconPaths;
}[] = [
  { label: "Twitter", href: "https://x.com/ottianselme", icon: "twitter-logo" },
  // { label: 'Twitch', href: 'https://twitch.tv/me', icon: 'twitch-logo' },
  {
    label: "GitHub",
    href: "https://github.com/ansetechnoapp/",
    icon: "github-logo",
  },
  // { label: 'CodePen', href: 'https://codepen.io/me', icon: 'codepen-logo' },
  // { label: 'dribbble', href: 'https://dribbble.com/me', icon: 'dribbble-logo' },
  {
    label: "YouTube",
    href: "https://www.youtube.com/@anscod/",
    icon: "youtube-logo",
  },
];
---

<nav>
  <div class="menu-header">
    <a href="/" class="site-title">
      <img
        src="/assets/Anscod_logo/Anscod_logo_light_mode.png"
        class="site-logo light-logo"
      />
      <img
        src="/assets/Anscod_logo/Anscod_logo_dark_mode.png"
        class="site-logo dark-logo"
      />
    </a>
    <menu-button>
      <template>
        <button class="menu-button" aria-expanded="false">
          <span class="sr-only">Menu</span>
          <Icon icon="list" />
        </button>
      </template>
    </menu-button>
  </div>
  <noscript>
    <ul class="nav-items">
      {
        textLinks.map(({ label, href }) => (
          <li>
            <a
              aria-current={Astro.url.pathname === href}
              class:list={[
                "link",
                {
                  active:
                    Astro.url.pathname === href ||
                    (href !== "/" && Astro.url.pathname.startsWith(href)),
                },
              ]}
              href={href}
            >
              {label}
            </a>
          </li>
        ))
      }
    </ul>
  </noscript>
  <noscript>
    <div class="menu-footer">
      <div class="socials">
        {
          iconLinks.map(({ href, icon, label }) => (
            <a href={href} class="social" target="_blank">
              <span class="sr-only">{label}</span>
              <Icon icon={icon} />
            </a>
          ))
        }
      </div>
    </div>
  </noscript>
  <div id="menu-content" hidden>
    <ul class="nav-items">
      {
        textLinks.map(({ label, href }) => (
          <li>
            <a
              aria-current={Astro.url.pathname === href}
              class:list={[
                "link",
                {
                  active:
                    Astro.url.pathname === href ||
                    (href !== "/" && Astro.url.pathname.startsWith(href)),
                },
              ]}
              href={href}
            >
              {label}
            </a>
          </li>
        ))
      }
    </ul>
    <div class="menu-footer">
      <div class="socials">
        {
          iconLinks.map(({ href, icon, label }) => (
            <a href={href} class="social" target="_blank">
              <span class="sr-only">{label}</span>
              <Icon icon={icon} />
            </a>
          ))
        }
      </div>

      <div class="theme-toggle">
        <ThemeToggle
          togglelightdarktheme="togglehigh"
          toggleiconelightdarktheme="lightx"
        />
      </div>
    </div>
  </div>
</nav>

<script>
  // Handle navigation scroll effect
  document.addEventListener("DOMContentLoaded", () => {
    const nav = document.querySelector("nav");

    const handleScroll = () => {
      if (window.scrollY > 50) {
        nav?.classList.add("scrolled");
      } else {
        nav?.classList.remove("scrolled");
      }
    };

    window.addEventListener("scroll", handleScroll);
    // Initial check
    handleScroll();
  });

  class MenuButton extends HTMLElement {
    constructor() {
      super();

      // Inject menu toggle button when JS runs.
      this.appendChild(this.querySelector("template")!.content.cloneNode(true));
      const btn = this.querySelector("button")!;

      // Hide menu (shown by default to support no-JS browsers).
      const menu = document.getElementById("menu-content")!;
      menu.hidden = true;
      // Add "menu-content" class in JS to avoid covering content in non-JS browsers.
      menu.classList.add("menu-content");

      /** Set whether the menu is currently expanded or collapsed. */
      const setExpanded = (expand: boolean) => {
        btn.setAttribute("aria-expanded", expand ? "true" : "false");
        menu.hidden = !expand;

        // Add transition classes
        if (expand) {
          menu.classList.add("menu-visible");
          setTimeout(() => {
            menu.classList.add("menu-active");
          }, 10); // Small delay to ensure the transition works
        } else {
          menu.classList.remove("menu-active");
          // Wait for transition to complete before hiding
          setTimeout(() => {
            menu.classList.remove("menu-visible");
          }, 300);
        }
      };

      // Toggle menu visibility when the menu button is clicked.
      btn.addEventListener("click", () => setExpanded(menu.hidden));

      // Hide menu button for large screens.
      const handleViewports = (e: MediaQueryList | MediaQueryListEvent) => {
        setExpanded(e.matches);
        btn.hidden = e.matches;
      };
      const mediaQueries = window.matchMedia("(min-width: 48em)");
      handleViewports(mediaQueries);
      mediaQueries.addEventListener("change", handleViewports);
    }
  }
  customElements.define("menu-button", MenuButton);
</script>

<style>
  /* nav {
    z-index: 9999;
    position: relative;
    font-family: var(--font-brand);
    font-weight: 500;
    margin-bottom: 3.5rem;
  } */
  nav {
    z-index: 9999;
    position: fixed;
    font-family: var(--font-display);
    font-weight: 500;
    width: 100%;
    transition: all var(--transition-medium);
    backdrop-filter: blur(12px);
    background-color: rgba(var(--gray-999-basis), 0.7);
    border-bottom: 1px solid rgba(var(--gray-999-basis), 0.1);
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
  }

  nav.scrolled {
    background-color: rgba(var(--gray-999-basis), 0.85);
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);
    border-bottom-color: rgba(var(--gray-999-basis), 0.15);
  }

  .menu-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 0.5rem;
    padding: 1rem;
  }

  .site-title {
    display: flex;
    gap: 0.5rem;
    align-items: center;
    line-height: 1.1;
    color: var(--gray-0);
    text-decoration: none;
  }

  .site-logo {
    width: auto;
    height: 2.5rem;
    transition: all 0.3s ease;
  }

  /* Show/hide logos based on theme */
  .dark-logo {
    display: none;
  }
  :global(.theme-dark) .dark-logo {
    display: block;
  }
  :global(.theme-dark) .light-logo {
    display: none;
  }

  .menu-button {
    position: relative;
    display: flex;
    border: 0;
    border-radius: 999rem;
    padding: 0.5rem;
    font-size: 1.5rem;
    color: var(--gray-300);
    background: radial-gradient(var(--gray-900), var(--gray-800) 150%);
    box-shadow: var(--shadow-md);
    cursor: pointer;
    transition:
      transform 0.2s ease,
      background-color 0.2s ease;
  }

  .menu-button:hover {
    transform: scale(1.05);
  }

  .menu-button:active {
    transform: scale(0.95);
  }

  .menu-button[aria-expanded="true"] {
    color: var(--gray-0);
    background: linear-gradient(180deg, var(--gray-600), transparent),
      radial-gradient(var(--gray-900), var(--gray-800) 150%);
  }

  .menu-button[hidden] {
    display: none;
  }

  .menu-button::before {
    position: absolute;
    inset: -1px;
    content: "";
    background: var(--gradient-stroke);
    border-radius: 999rem;
    z-index: -1;
  }

  .menu-content {
    position: absolute;
    left: 0;
    right: 0;
    opacity: 0;
    transform: translateY(-8px);
    pointer-events: none;
    transition:
      opacity var(--menu-transition),
      transform var(--menu-transition);
  }

  .menu-content.menu-visible {
    pointer-events: auto;
  }

  .menu-content.menu-active {
    opacity: 1;
    transform: translateY(0);
  }

  .nav-items {
    margin: 0;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    font-size: var(--text-md);
    line-height: 1.2;
    list-style: none;
    padding: 2rem;
    background-color: var(--gray-999);
    border-bottom: 1px solid var(--gray-800);
  }

  .link {
    display: inline-block;
    color: var(--gray-300);
    text-decoration: none;
    padding: 0.5rem 1rem;
    border-radius: 0.5rem;
    transition: all 0.2s ease;
    position: relative;
    overflow: hidden;
  }

  .link:hover,
  .link:focus {
    color: var(--gray-100);
    background-color: var(--gray-1002);
    transform: translateX(4px);
  }

  .link.active {
    color: var(--accent-text-over);
    background-color: var(--accent-regular);
    box-shadow: 0 2px 10px rgba(118, 17, 166, 0.4);
    font-weight: 600;
  }

  .menu-footer {
    --icon-size: var(--text-xl);
    --icon-padding: 0.5rem;

    display: flex;
    justify-content: space-between;
    gap: 0.75rem;
    padding: 1.5rem 2rem 1.5rem 1.5rem;
    background-color: var(--gray-999);
    border-radius: 0 0 0.75rem 0.75rem;
    box-shadow: var(--shadow-lg);
  }

  .socials {
    display: flex;
    flex-wrap: wrap;
    gap: 0.625rem;
    font-size: var(--icon-size);
  }

  .social {
    display: flex;
    padding: var(--icon-padding);
    text-decoration: none;
    color: var(--accent-dark);
    transition: all var(--transition-medium);
    border-radius: 50%;
    position: relative;
    overflow: hidden;
    background-color: rgba(var(--gray-999-basis), 0.1);
    backdrop-filter: blur(4px);
  }

  .social::before {
    content: "";
    position: absolute;
    inset: 0;
    background: var(--accent-gradient);
    opacity: 0;
    transition: opacity var(--transition-medium);
    z-index: 0;
  }

  .social > * {
    position: relative;
    z-index: 1;
  }

  .social:hover,
  .social:focus {
    color: var(--accent-text-over);
    transform: translateY(-3px) scale(1.1);
    box-shadow:
      0 8px 16px rgba(0, 0, 0, 0.15),
      var(--accent-soft-glow);
  }

  .social:hover::before,
  .social:focus::before {
    opacity: 1;
  }

  .theme-toggle {
    display: flex;
    align-items: center;
    height: calc(var(--icon-size) + 2 * var(--icon-padding));
  }

  @media (max-width: 48em) {
    .site-logo {
      height: 2rem;
    }

    /* Optimize spacing on mobile */
    .nav-items {
      padding: 1.5rem;
      gap: 0.75rem;
    }

    .menu-footer {
      padding: 1.25rem;
    }
  }

  @media (max-width: 30em) {
    .site-logo {
      height: 5rem;
    }
  }

  @media (min-width: 48em) {
    nav {
      display: grid;
      grid-template-columns: 1fr auto 1fr;
      align-items: center;
      padding: 0rem 5rem;
      gap: 1rem;
      /* background: var(--gray-1002); */
      /* width: 98.7%; */
    }

    .menu-header {
      padding: 0;
    }

    .site-title {
      font-size: var(--text-lg);
    }

    .site-logo {
      height: 5rem;
    }

    .menu-content {
      display: contents;
      opacity: 1;
      transform: none;
      pointer-events: auto;
    }

    .nav-items {
      position: relative;
      flex-direction: row;
      font-size: var(--text-sm);
      border-radius: 999rem;
      border: 1px solid rgba(var(--gray-999-basis), 0.1);
      padding: 0.5rem 0.5625rem;
      background: linear-gradient(
        to right,
        rgba(var(--gray-999-basis), 0.05),
        rgba(var(--gray-999-basis), 0.1)
      );
      backdrop-filter: blur(10px);
      box-shadow: 0 10px 30px -10px rgba(0, 0, 0, 0.1);
      transition: all var(--transition-medium);
    }

    .nav-items:hover {
      border-color: rgba(var(--gray-999-basis), 0.2);
      box-shadow:
        0 15px 40px -15px rgba(0, 0, 0, 0.15),
        0 0 10px rgba(157, 78, 255, 0.1);
    }

    .nav-items::before {
      position: absolute;
      inset: -1px;
      content: "";
      background: var(--gradient-stroke);
      border-radius: 999rem;
      z-index: -1;
    }

    .link {
      padding: 0.5rem 1rem;
      border-radius: 999rem;
      transition:
        color var(--transition-medium),
        background-color var(--transition-medium),
        transform var(--transition-medium),
        box-shadow var(--transition-medium);
      position: relative;
      z-index: 1;
    }

    .link::before {
      content: "";
      position: absolute;
      inset: 0;
      border-radius: 999rem;
      background: var(--accent-gradient);
      opacity: 0;
      z-index: -1;
      transition: opacity var(--transition-medium);
    }

    .link:hover,
    .link:focus {
      color: var(--gray-0);
      transform: translateY(-2px);
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .link:hover::before,
    .link:focus::before {
      opacity: 0.1;
    }

    .link.active {
      color: var(--accent-text-over);
      background-color: var(--accent-regular);
      box-shadow: 0 4px 12px rgba(118, 17, 166, 0.4);
      font-weight: 600;
    }

    .link.active::before {
      opacity: 0;
    }

    .menu-footer {
      --icon-padding: 0.375rem;

      justify-self: flex-end;
      align-items: center;
      padding: 0;
      background-color: transparent;
      box-shadow: none;
    }

    .socials {
      display: none;
    }
  }

  @media (min-width: 60em) {
    .socials {
      display: flex;
      justify-content: flex-end;
      gap: 0;
    }
    /* .socials {
			display: none;
		} */

    .site-logo {
      height: 5rem;
    }
  }
  @media (forced-colors: active) {
    .link.active {
      color: SelectedItem;
    }
  }
</style>
