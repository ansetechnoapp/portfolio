---
interface Props {
  title: string;
  tagline?: string;
  tagline1?: string;
  align?: "start" | "center";
}

const { align = "center", tagline, tagline1, title } = Astro.props;
---

<div class:list={["hero stack gap-4", align]}>
  <div class="hero-text-container">
    <h1 class="title"><span class="highlight">{title}</span></h1>
    {tagline && <h3 class="tagline">{tagline}</h3>}
    {tagline1 && <p class="tagline1">{tagline1}</p>}
  </div>
  <slot />
</div>

<style>
  .hero {
    font-size: var(--text-lg);
    text-align: center;
    position: relative;
    animation: fadeIn 1s ease-out;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .hero-text-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    max-width: 800px;
    margin: 0 auto;
  }

  .title {
    font-size: var(--text-3xl);
    color: var(--gray-0);
    margin-bottom: 1rem;
    line-height: 1.2;
    position: relative;
  }

  .highlight {
    position: relative;
    z-index: 1;
  }

  .highlight::after {
    content: "";
    position: absolute;
    bottom: 0;
    left: -0.25em;
    right: -0.25em;
    height: 0.3em;
    background-color: var(--accent-regular);
    z-index: -1;
    transform: rotate(-2deg);
    opacity: 0.3;
  }

  .tagline {
    font-weight: 500;
    color: var(--accent-regular);
    margin-bottom: 1rem;
    font-size: var(--text-lg);
    letter-spacing: 0.5px;
  }

  .tagline1 {
    line-height: 1.6;
    color: var(--gray-300);
    max-width: 650px;
  }

  @media (min-width: 48em) {
    .hero {
      font-size: var(--text-xl);
    }

    .title {
      font-size: var(--text-5xl);
    }

    .tagline {
      font-size: var(--text-xl);
    }
  }

  @media (min-width: 62em) {
    .start {
      text-align: left;
    }

    .start .hero-text-container {
      align-items: flex-start;
      margin: 0;
    }
  }
</style>
