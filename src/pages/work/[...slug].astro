---
export const prerender = true;

import { type CollectionEntry, getCollection } from "astro:content";

import Layout from "../../layouts/Layout.astro";

import ContactCTA from "../../components/ContactCTA.astro";
import Hero from "../../components/Hero.astro";
import Icon from "../../components/reactJS/Icon";
import Pill from "../../components/reactJS/Pill";
import ProjectGallery from "../../components/ProjectGallery.astro";
import FeatureModal from "../../components/FeatureModal.astro";
import ProjectTabs from "../../components/ProjectTabs.astro";
import ProjectCTA from "../../components/ProjectCTA.astro";

interface Props {
  entry: CollectionEntry<"work">;
}

// This is a dynamic route that generates a page for every Markdown file in src/content/
// Read more about dynamic routes and this `getStaticPaths` function in the Astro docs:
// https://docs.astro.build/en/core-concepts/routing/#dynamic-routes
export async function getStaticPaths() {
  const work = await getCollection("work");
  return work.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

// Enhanced SEO metadata for projects
const projectTitle = `${entry.data.title} | Kevin Otty - Développeur Web & Mobile`;
const projectDescription = entry.data.description || `Découvrez ${entry.data.title}, un projet de développement ${entry.data.device === 'mobile' ? 'mobile' : 'web'} réalisé par Kevin Otty. Technologies utilisées: ${entry.data.tech?.join(', ') || 'développement moderne'}.`;

// Prepare project metadata for SEO
const projectMetadata = {
  publishedTime: entry.data.publishDate
    ? new Date(entry.data.publishDate).toISOString()
    : new Date().toISOString(),
  modifiedTime: new Date().toISOString(),
  tags: entry.data.tags || [],
};

// Define project features for the modal
const projectFeatures = [
  {
    id: "architecture",
    title: "Architecture Moderne",
    description: "Structure de code optimisée et maintenable",
    details: `Ce projet utilise une architecture moderne avec séparation des préoccupations, permettant une maintenance facile et une évolutivité optimale. L'organisation du code suit les meilleures pratiques de l'industrie.`,
    technologies: entry.data.tech || [],
    benefits: [
      "Code maintenable et évolutif",
      "Performance optimisée",
      "Sécurité renforcée",
      "Tests automatisés"
    ]
  },
  {
    id: "responsive",
    title: "Design Responsive",
    description: "Interface adaptée à tous les appareils",
    details: `L'interface utilisateur s'adapte parfaitement à tous les types d'écrans, des smartphones aux écrans de bureau, garantissant une expérience utilisateur optimale sur tous les appareils.`,
    benefits: [
      "Expérience utilisateur cohérente",
      "Accessibilité améliorée",
      "Performance mobile optimisée",
      "SEO friendly"
    ]
  },
  {
    id: "performance",
    title: "Performance Optimisée",
    description: "Temps de chargement ultra-rapides",
    details: `Optimisations avancées pour garantir des temps de chargement rapides et une expérience utilisateur fluide. Utilisation de techniques modernes de cache et d'optimisation des ressources.`,
    benefits: [
      "Temps de chargement < 3 secondes",
      "Score Lighthouse > 90",
      "Optimisation des images",
      "Cache intelligent"
    ]
  }
];

// Define tabs for project organization
const projectTabs = [
  {
    id: "overview",
    label: "Présentation",
    icon: `<svg fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"/></svg>`
  },
  {
    id: "features",
    label: "Fonctionnalités",
    icon: `<svg fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"/></svg>`
  },
  {
    id: "technologies",
    label: "Technologies",
    icon: `<svg fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4"/></svg>`
  }
];
---

<Layout
  title={projectTitle}
  description={projectDescription}
  image={entry.data.img || "/assets/social-preview.jpg"}
  type="project"
  article={projectMetadata}
>
  <div class="project-container site-content-spacing">
    <div class="project-header">
      <div class="header-content">
        <a class="back-link" href="/work/"
          ><Icon icon="arrow-left" /> Back to Projects</a
        >
        <h1 class="project-title">{entry.data.title}</h1>
        <p class="project-description">{entry.data.description}</p>

        <div class="meta-container">
          <div class="tags-container">
            <h3>Category</h3>
            <div class="tags">
              {entry.data.tags.map((t) => <Pill>{t}</Pill>)}
            </div>
          </div>

          {
            entry.data.tech && (
              <div class="tech-container">
                <h3>Technologies</h3>
                <div class="tech-list">
                  {entry.data.tech.map((tech) => (
                    <Pill>{tech}</Pill>
                  ))}
                </div>
              </div>
            )
          }
        </div>

        <div class="cta-buttons">
          {
            entry.data.liveDemo && (
              <a
                href={entry.data.liveDemo}
                class="btn primary"
                target="_blank"
                rel="noopener"
              >
                <Icon icon="rocket-launch" /> Live Demo
              </a>
            )
          }
          {
            entry.data.github && (
              <a
                href={entry.data.github}
                class="btn secondary"
                target="_blank"
                rel="noopener"
              >
                <Icon icon="github-logo" /> View Code
              </a>
            )
          }
        </div>
      </div>
    </div>

    {entry.data.img && (
      <ProjectGallery
        mainImage={entry.data.img}
        mainImageAlt={entry.data.img_alt || `${entry.data.title} - Image principale`}
        additionalImages={entry.data.additionalImages}
        title={entry.data.title}
      />
    )}

    <div class="project-content">
      <ProjectTabs tabs={projectTabs} defaultTab="overview">
        <div slot="overview" class="tab-content">
          <div class="content-wrapper">
            <Content />
          </div>
        </div>

        <div slot="features" class="tab-content">
          <FeatureModal features={projectFeatures} />
        </div>

        <div slot="technologies" class="tab-content">
          <div class="technologies-section">
            <h3>Stack Technique</h3>
            <div class="tech-grid">
              {entry.data.tech?.map((tech) => (
                <div class="tech-item">
                  <div class="tech-icon">
                    <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4"/>
                    </svg>
                  </div>
                  <span class="tech-name">{tech}</span>
                </div>
              ))}
            </div>

            <div class="tech-details">
              <h4>Pourquoi ces technologies ?</h4>
              <p>
                Chaque technologie a été choisie pour ses avantages spécifiques dans le contexte de ce projet.
                Cette stack garantit performance, maintenabilité et évolutivité.
              </p>

              <div class="tech-benefits">
                <div class="benefit-item">
                  <h5>Performance</h5>
                  <p>Optimisations avancées pour des temps de chargement rapides</p>
                </div>
                <div class="benefit-item">
                  <h5>Sécurité</h5>
                  <p>Implémentation des meilleures pratiques de sécurité</p>
                </div>
                <div class="benefit-item">
                  <h5>Évolutivité</h5>
                  <p>Architecture modulaire permettant l'ajout de nouvelles fonctionnalités</p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </ProjectTabs>
    </div>

    <ProjectCTA
      githubUrl={entry.data.github}
      liveUrl={entry.data.liveDemo}
      title={entry.data.title}
      description={`Découvrez ${entry.data.title} en action et explorez le code source pour comprendre les techniques utilisées.`}
    />

    <div class="next-section">
      <h2>Interested in working together?</h2>
      <ContactCTA />
    </div>
  </div>
</Layout>

<style>
  /* Modern Project Detail Page Styling */
  .project-container {
    max-width: 1400px;
    margin: 0 auto;
  }

  .project-header {
    padding-top: 2rem;
    padding-bottom: 3rem;
  }

  .header-content {
    max-width: 900px;
    margin: 0 auto;
  }

  .back-link {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    font-size: var(--text-sm);
    color: var(--gray-400);
    margin-bottom: 2rem;
    transition: color 0.2s ease;
    text-decoration: none;
  }

  .back-link:hover {
    color: var(--accent);
  }

  .project-title {
    font-size: clamp(2.5rem, 5vw, 3.5rem);
    line-height: 1.1;
    font-weight: 700;
    margin-bottom: 1.5rem;
    background: var(
      --gradient-text,
      linear-gradient(to right, var(--gray-0), var(--accent-light))
    );
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .project-description {
    font-size: var(--text-lg);
    max-width: 65ch;
    margin-bottom: 3rem;
    color: var(--gray-300);
    line-height: 1.6;
  }

  .meta-container {
    display: grid;
    grid-template-columns: 1fr;
    gap: 2rem;
    margin-bottom: 2.5rem;
    border-top: 1px solid var(--gray-800);
    border-bottom: 1px solid var(--gray-800);
    padding: 2rem 0;
  }

  .tags-container h3,
  .tech-container h3 {
    font-size: var(--text-md);
    margin-bottom: 1rem;
    color: var(--gray-200);
  }

  .tags,
  .tech-list {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
  }

  .cta-buttons {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
  }

  .btn {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1.5rem;
    border-radius: 0.5rem;
    font-weight: 600;
    transition: all 0.2s ease;
    text-decoration: none;
  }

  .btn.primary {
    background: var(--accent);
    color: var(--gray-999);
  }

  .btn.primary:hover {
    background: var(--accent-light);
  }

  .btn.secondary {
    background: var(--gray-800);
    color: var(--gray-100);
  }

  .btn.secondary:hover {
    background: var(--gray-700);
  }

  .project-showcase {
    margin: 3rem 0;
    border-radius: 1rem;
    overflow: hidden;
    box-shadow: 0 10px 30px -15px rgba(0, 0, 0, 0.5);
    background: var(--gradient-subtle);
  }

  .main-image {
    width: 100%;
    height: auto;
    border-radius: 0.75rem;
    overflow: hidden;
  }

  .main-image img {
    width: 100%;
    height: auto;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .project-content {
    max-width: 900px;
    margin: 4rem auto;
  }

  .content-wrapper {
    font-size: var(--text-md);
    line-height: 1.8;
    color: var(--gray-300);
  }

  .content-wrapper :global(h1),
  .content-wrapper :global(h2) {
    margin: 2.5rem 0 1.5rem;
    font-size: clamp(1.5rem, 3vw, 2rem);
    line-height: 1.2;
    color: var(--gray-100);
  }

  .content-wrapper :global(h3),
  .content-wrapper :global(h4) {
    margin: 2rem 0 1rem;
    font-size: clamp(1.2rem, 2vw, 1.5rem);
    line-height: 1.3;
    color: var(--gray-100);
  }

  .content-wrapper :global(p) {
    margin-bottom: 1.5rem;
  }

  .content-wrapper :global(ul),
  .content-wrapper :global(ol) {
    margin-bottom: 1.5rem;
    padding-left: 1.5rem;
  }

  .content-wrapper :global(li) {
    margin-bottom: 0.75rem;
  }

  .content-wrapper :global(blockquote) {
    margin: 2rem 0;
    padding: 1.5rem 2rem;
    border-left: 4px solid var(--accent);
    background: var(--gray-900);
    border-radius: 0 0.5rem 0.5rem 0;
  }

  .content-wrapper :global(blockquote p) {
    font-size: var(--text-lg);
    font-style: italic;
    font-weight: 500;
    color: var(--gray-200);
  }

  .content-wrapper :global(pre) {
    margin: 1.5rem 0;
    padding: 1.5rem;
    border-radius: 0.5rem;
    background: var(--gray-950);
    overflow-x: auto;
  }

  .content-wrapper :global(img) {
    max-width: 100%;
    border-radius: 0.75rem;
    margin: 2rem 0;
  }

  .additional-images {
    margin-top: 4rem;
  }

  .additional-images h2 {
    margin-bottom: 2rem;
    font-size: var(--text-xl);
    color: var(--gray-100);
  }

  .image-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 1.5rem;
  }

  .gallery-image {
    border-radius: 0.75rem;
    overflow: hidden;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease;
  }

  .gallery-image:hover {
    transform: translateY(-5px);
  }

  .gallery-image img {
    width: 100%;
    height: 250px;
    object-fit: cover;
  }

  .next-section {
    text-align: center;
    padding: 5rem 0;
    background: var(--gray-950);
    border-radius: 1rem;
    margin: 3rem 0;
  }

  .next-section h2 {
    font-size: var(--text-xl);
    margin-bottom: 2rem;
    color: var(--gray-100);
  }

  /* New component styles */
  .tab-content {
    min-height: 400px;
  }

  .technologies-section {
    padding: 2rem 0;
  }

  .technologies-section h3 {
    font-size: 2rem;
    font-weight: 700;
    margin-bottom: 2rem;
    color: var(--gray-0);
    text-align: center;
  }

  .tech-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1.5rem;
    margin-bottom: 3rem;
  }

  .tech-item {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 1.5rem;
    background: var(--gray-999);
    border: 1px solid rgba(var(--gray-999-basis), 0.1);
    border-radius: 1rem;
    transition: all 0.3s ease;
  }

  .tech-item:hover {
    transform: translateY(-4px);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
    border-color: rgba(var(--accent-regular), 0.3);
  }

  .tech-icon {
    width: 3rem;
    height: 3rem;
    background: var(--accent-gradient);
    border-radius: 0.75rem;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    flex-shrink: 0;
  }

  .tech-icon svg {
    width: 1.5rem;
    height: 1.5rem;
  }

  .tech-name {
    font-weight: 600;
    color: var(--gray-0);
    font-size: 1.1rem;
  }

  .tech-details {
    background: rgba(var(--gray-999-basis), 0.05);
    border-radius: 1rem;
    padding: 2rem;
    margin-top: 2rem;
  }

  .tech-details h4 {
    font-size: 1.5rem;
    font-weight: 600;
    margin-bottom: 1rem;
    color: var(--gray-0);
  }

  .tech-details p {
    color: var(--gray-300);
    line-height: 1.6;
    margin-bottom: 2rem;
  }

  .tech-benefits {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1.5rem;
  }

  .benefit-item {
    padding: 1.5rem;
    background: var(--gray-999);
    border-radius: 0.75rem;
    border: 1px solid rgba(var(--gray-999-basis), 0.1);
  }

  .benefit-item h5 {
    font-size: 1.125rem;
    font-weight: 600;
    margin-bottom: 0.5rem;
    color: var(--accent-regular);
  }

  .benefit-item p {
    color: var(--gray-300);
    font-size: 0.9rem;
    line-height: 1.5;
    margin: 0;
  }

  @media (min-width: 768px) {
    .meta-container {
      grid-template-columns: 1fr 1fr;
    }

    .project-header {
      padding: 4rem 0 3rem;
    }
  }

  @media (max-width: 767px) {
    .cta-buttons {
      flex-direction: column;
      width: 100%;
    }

    .btn {
      width: 100%;
      justify-content: center;
    }

    .project-header {
      padding: 1rem 0 2rem;
    }

    .tech-grid {
      grid-template-columns: 1fr;
      gap: 1rem;
    }

    .tech-item {
      padding: 1rem;
    }

    .tech-icon {
      width: 2.5rem;
      height: 2.5rem;
    }

    .tech-benefits {
      grid-template-columns: 1fr;
      gap: 1rem;
    }

    .benefit-item {
      padding: 1rem;
    }

    .technologies-section h3 {
      font-size: 1.75rem;
    }

    .tech-details {
      padding: 1.5rem;
    }
  }
</style>
