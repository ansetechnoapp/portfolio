---
import { type CollectionEntry, getCollection } from "astro:content";

import Layout from "../../layouts/Layout.astro";

import ContactCTA from "../../components/ContactCTA.astro";
import Hero from "../../components/Hero.astro";
import Icon from "../../components/reactJS/Icon";
import Pill from "../../components/reactJS/Pill";

interface Props {
  entry: CollectionEntry<"work">;
}

// This is a dynamic route that generates a page for every Markdown file in src/content/
// Read more about dynamic routes and this `getStaticPaths` function in the Astro docs:
// https://docs.astro.build/en/core-concepts/routing/#dynamic-routes
export async function getStaticPaths() {
  const work = await getCollection("work");
  return work.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<Layout title={entry.data.title} description={entry.data.description}>
  <div class="project-container">
    <div class="project-header">
      <div class="header-content">
        <a class="back-link" href="/work/"
          ><Icon icon="arrow-left" /> Back to Projects</a
        >
        <h1 class="project-title">{entry.data.title}</h1>
        <p class="project-description">{entry.data.description}</p>

        <div class="meta-container">
          <div class="tags-container">
            <h3>Category</h3>
            <div class="tags">
              {entry.data.tags.map((t) => <Pill>{t}</Pill>)}
            </div>
          </div>

          {
            entry.data.tech && (
              <div class="tech-container">
                <h3>Technologies</h3>
                <div class="tech-list">
                  {entry.data.tech.map((tech) => (
                    <Pill>{tech}</Pill>
                  ))}
                </div>
              </div>
            )
          }
        </div>

        <div class="cta-buttons">
          {
            entry.data.liveDemo && (
              <a
                href={entry.data.liveDemo}
                class="btn primary"
                target="_blank"
                rel="noopener"
              >
                <Icon icon="rocket-launch" /> Live Demo
              </a>
            )
          }
          {
            entry.data.github && (
              <a
                href={entry.data.github}
                class="btn secondary"
                target="_blank"
                rel="noopener"
              >
                <Icon icon="github-logo" /> View Code
              </a>
            )
          }
        </div>
      </div>
    </div>

    <div class="project-showcase">
      {
        entry.data.img && (
          <div class="main-image">
            <picture>
              {/* AVIF format */}
              <source
                type="image/avif"
                srcset={`${entry.data.img.replace(/\.(jpg|jpeg|png|gif)$/i, "_optimized.avif")} 1x, ${entry.data.img.replace(/\.(jpg|jpeg|png|gif)$/i, "_640w.avif")} 640w, ${entry.data.img.replace(/\.(jpg|jpeg|png|gif)$/i, "_1024w.avif")} 1024w`}
                sizes="(max-width: 768px) 100vw, 1200px"
              />
              {/* WebP format */}
              <source
                type="image/webp"
                srcset={`${entry.data.img.replace(/\.(jpg|jpeg|png|gif)$/i, "_optimized.webp")} 1x, ${entry.data.img.replace(/\.(jpg|jpeg|png|gif)$/i, "_640w.webp")} 640w, ${entry.data.img.replace(/\.(jpg|jpeg|png|gif)$/i, "_1024w.webp")} 1024w`}
                sizes="(max-width: 768px) 100vw, 1200px"
              />
              {/* Fallback format */}
              <img
                src={entry.data.img}
                alt={entry.data.img_alt || ""}
                loading="lazy"
                decoding="async"
              />
            </picture>
          </div>
        )
      }
    </div>

    <div class="project-content">
      <div class="content-wrapper">
        <Content />
      </div>

      {
        entry.data.additionalImages &&
          entry.data.additionalImages.length > 0 && (
            <div class="additional-images">
              <h2>Project Gallery</h2>
              <div class="image-grid">
                {entry.data.additionalImages.map((img) => (
                  <div class="gallery-image">
                    <picture>
                      {/* AVIF format */}
                      <source
                        type="image/avif"
                        srcset={`${img.url.replace(/\.(jpg|jpeg|png|gif)$/i, "_optimized.avif")} 1x, ${img.url.replace(/\.(jpg|jpeg|png|gif)$/i, "_640w.avif")} 640w, ${img.url.replace(/\.(jpg|jpeg|png|gif)$/i, "_1024w.avif")} 1024w`}
                        sizes="(max-width: 768px) 100vw, 400px"
                      />
                      {/* WebP format */}
                      <source
                        type="image/webp"
                        srcset={`${img.url.replace(/\.(jpg|jpeg|png|gif)$/i, "_optimized.webp")} 1x, ${img.url.replace(/\.(jpg|jpeg|png|gif)$/i, "_640w.webp")} 640w, ${img.url.replace(/\.(jpg|jpeg|png|gif)$/i, "_1024w.webp")} 1024w`}
                        sizes="(max-width: 768px) 100vw, 400px"
                      />
                      {/* Fallback format */}
                      <img
                        src={img.url}
                        alt={img.alt || ""}
                        loading="lazy"
                        decoding="async"
                      />
                    </picture>
                  </div>
                ))}
              </div>
            </div>
          )
      }
    </div>

    <div class="next-section">
      <h2>Interested in working together?</h2>
      <ContactCTA />
    </div>
  </div>
</Layout>

<style>
  /* Modern Project Detail Page Styling */
  .project-container {
    max-width: 1400px;
    margin: 0 auto;
    padding: 0 1.5rem;
  }

  .project-header {
    padding: 5rem 0 3rem;
  }

  .header-content {
    max-width: 900px;
    margin: 0 auto;
  }

  .back-link {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    font-size: var(--text-sm);
    color: var(--gray-400);
    margin-bottom: 2rem;
    transition: color 0.2s ease;
    text-decoration: none;
  }

  .back-link:hover {
    color: var(--accent);
  }

  .project-title {
    font-size: clamp(2.5rem, 5vw, 3.5rem);
    line-height: 1.1;
    font-weight: 700;
    margin-bottom: 1.5rem;
    background: var(
      --gradient-text,
      linear-gradient(to right, var(--gray-0), var(--accent-light))
    );
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .project-description {
    font-size: var(--text-lg);
    max-width: 65ch;
    margin-bottom: 3rem;
    color: var(--gray-300);
    line-height: 1.6;
  }

  .meta-container {
    display: grid;
    grid-template-columns: 1fr;
    gap: 2rem;
    margin-bottom: 2.5rem;
    border-top: 1px solid var(--gray-800);
    border-bottom: 1px solid var(--gray-800);
    padding: 2rem 0;
  }

  .tags-container h3,
  .tech-container h3 {
    font-size: var(--text-md);
    margin-bottom: 1rem;
    color: var(--gray-200);
  }

  .tags,
  .tech-list {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
  }

  .cta-buttons {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
  }

  .btn {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1.5rem;
    border-radius: 0.5rem;
    font-weight: 600;
    transition: all 0.2s ease;
    text-decoration: none;
  }

  .btn.primary {
    background: var(--accent);
    color: var(--gray-999);
  }

  .btn.primary:hover {
    background: var(--accent-light);
  }

  .btn.secondary {
    background: var(--gray-800);
    color: var(--gray-100);
  }

  .btn.secondary:hover {
    background: var(--gray-700);
  }

  .project-showcase {
    margin: 3rem 0;
    border-radius: 1rem;
    overflow: hidden;
    box-shadow: 0 10px 30px -15px rgba(0, 0, 0, 0.5);
    background: var(--gradient-subtle);
  }

  .main-image {
    width: 100%;
    height: auto;
    border-radius: 0.75rem;
    overflow: hidden;
  }

  .main-image img {
    width: 100%;
    height: auto;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .project-content {
    max-width: 900px;
    margin: 4rem auto;
  }

  .content-wrapper {
    font-size: var(--text-md);
    line-height: 1.8;
    color: var(--gray-300);
  }

  .content-wrapper :global(h1),
  .content-wrapper :global(h2) {
    margin: 2.5rem 0 1.5rem;
    font-size: clamp(1.5rem, 3vw, 2rem);
    line-height: 1.2;
    color: var(--gray-100);
  }

  .content-wrapper :global(h3),
  .content-wrapper :global(h4) {
    margin: 2rem 0 1rem;
    font-size: clamp(1.2rem, 2vw, 1.5rem);
    line-height: 1.3;
    color: var(--gray-100);
  }

  .content-wrapper :global(p) {
    margin-bottom: 1.5rem;
  }

  .content-wrapper :global(ul),
  .content-wrapper :global(ol) {
    margin-bottom: 1.5rem;
    padding-left: 1.5rem;
  }

  .content-wrapper :global(li) {
    margin-bottom: 0.75rem;
  }

  .content-wrapper :global(blockquote) {
    margin: 2rem 0;
    padding: 1.5rem 2rem;
    border-left: 4px solid var(--accent);
    background: var(--gray-900);
    border-radius: 0 0.5rem 0.5rem 0;
  }

  .content-wrapper :global(blockquote p) {
    font-size: var(--text-lg);
    font-style: italic;
    font-weight: 500;
    color: var(--gray-200);
  }

  .content-wrapper :global(pre) {
    margin: 1.5rem 0;
    padding: 1.5rem;
    border-radius: 0.5rem;
    background: var(--gray-950);
    overflow-x: auto;
  }

  .content-wrapper :global(img) {
    max-width: 100%;
    border-radius: 0.75rem;
    margin: 2rem 0;
  }

  .additional-images {
    margin-top: 4rem;
  }

  .additional-images h2 {
    margin-bottom: 2rem;
    font-size: var(--text-xl);
    color: var(--gray-100);
  }

  .image-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 1.5rem;
  }

  .gallery-image {
    border-radius: 0.75rem;
    overflow: hidden;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease;
  }

  .gallery-image:hover {
    transform: translateY(-5px);
  }

  .gallery-image img {
    width: 100%;
    height: 250px;
    object-fit: cover;
  }

  .next-section {
    text-align: center;
    padding: 5rem 0;
    background: var(--gray-950);
    border-radius: 1rem;
    margin: 3rem 0;
  }

  .next-section h2 {
    font-size: var(--text-xl);
    margin-bottom: 2rem;
    color: var(--gray-100);
  }

  @media (min-width: 768px) {
    .meta-container {
      grid-template-columns: 1fr 1fr;
    }

    .project-header {
      padding: 8rem 0 4rem;
    }
  }

  @media (max-width: 767px) {
    .cta-buttons {
      flex-direction: column;
      width: 100%;
    }

    .btn {
      width: 100%;
      justify-content: center;
    }

    .project-header {
      padding: 4rem 0 2rem;
    }
  }
</style>
