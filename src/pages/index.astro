---
export const prerender = true;

import { getCollection } from "astro:content";

// image paths
const Img1 = {
  src: "/assets/otty_kevin_optimized/2.png",
  srcsetWebp:
    "/assets/otty_kevin_optimized/2_640w.webp 640w, /assets/otty_kevin_optimized/2_1024w.webp 1024w",
  srcsetAvif:
    "/assets/otty_kevin_optimized/2_640w.avif 640w, /assets/otty_kevin_optimized/2_1024w.avif 1024w",
  webp: "/assets/otty_kevin_optimized/2_optimized.webp",
  avif: "/assets/otty_kevin_optimized/2_optimized.avif",
  fallback: "/assets/otty_kevin_optimized/2.png",
};
const Img2 = {
  src: "/assets/otty_kevin_optimized/6.png",
  srcsetWebp:
    "/assets/otty_kevin_optimized/6_640w.webp 640w, /assets/otty_kevin_optimized/6_1024w.webp 1024w",
  srcsetAvif:
    "/assets/otty_kevin_optimized/6_640w.avif 640w, /assets/otty_kevin_optimized/6_1024w.avif 1024w",
  webp: "/assets/otty_kevin_optimized/6_optimized.webp",
  avif: "/assets/otty_kevin_optimized/6_optimized.avif",
  fallback: "/assets/otty_kevin_optimized/6.png",
};
// Layout import — provides basic page elements: <head>, <nav>, <footer> etc.
import Layout from "../layouts/Layout.astro";

// Component Imports
import CallToAction from "../components/CallToAction.astro";
import Hero from "../components/Hero.astro";
import Icon from "../components/reactJS/Icon";
import Pill from "../components/reactJS/Pill";
import PortfolioPreview from "../components/reactJS/PortfolioPreview";
import Contact from "../components/Contact.astro";
import Services from "../components/Services.astro";
import Card from "../components/card.astro";
import MenuLinkNav from "../components/menuLinkNav.astro";
// Page section components
import ContactCTA from "../components/ContactCTA.astro";
import Skills from "../components/reactJS/Skills";
import HeroMediaSocialNav from "../components/heroMediaSocialNav.astro";
import About from "../components/About.astro";
import Timeline from "../components/reactJS/TimelineExport";
import timelineEvents from "../data/timelineEvents.json";
// import HeroCounter from "../components/heroCounter.astro";
// Content Fetching: List four most recent work projects
const projects = (await getCollection("work"))
  .sort((a, b) => b.data.number - a.data.number)
  .slice(0, 4);

// Full Astro Component Syntax:
// https://docs.astro.build/core-concepts/astro-components/

import dataUser from "../data/User.json";
// import FilterProjects from "../components/reactJS/FilterProjects";
interface Props {
  heroTitle?: string | undefined;
}
const { heroTitle = `I am ${dataUser.firstName} ${dataUser.lastName}` } =
  Astro.props;
---

<Layout
  title={`${dataUser.firstName} ${dataUser.lastName} - Développeur Web & Mobile Freelance`}
  description={`Portfolio de ${dataUser.firstName} ${dataUser.lastName}, développeur freelance à ${dataUser.address.city}. Expert React, React Native, Astro.js. Applications web et mobiles performantes.`}
  image="/assets/social-preview.jpg"
  type="website"
>
  <MenuLinkNav namepage="home" />

  <!-- Modern Hero Section -->
  <section id="hero_home">
    <Hero
      title={heroTitle}
      tagline="Freelance web and mobile developer."
      tagline1="Je combine une expertise technique avec un design soigné pour créer des applications web et mobiles intuitives, rapides et efficaces. Mon objectif : apporter de la valeur à vos utilisateurs."
      align="start"
    >
      <!-- Hero Image in the new structure -->
      <div class="hero-image-modern">
        <picture>
          <source
            srcset={Img1.srcsetAvif}
            type="image/avif"
            sizes="(max-width: 768px) 100vw, 480px"
          />
          <source
            srcset={Img1.srcsetWebp}
            type="image/webp"
            sizes="(max-width: 768px) 100vw, 480px"
          />
          <img
            alt={`${dataUser.firstName} ${dataUser.lastName}, développeur web et mobile freelance basé à ${dataUser.address.city}, ${dataUser.address.country}. Expert en React, React Native et Astro.js`}
            width="480"
            height="620"
            src={Img1.fallback}
            loading="eager"
            decoding="async"
          />
        </picture>
      </div>

      <!-- Social Media Navigation -->
      <div class="hero-social-modern">
        <HeroMediaSocialNav />
      </div>
    </Hero>
  </section>

  <main class="wrapper stack gap-20 lg:gap-35">
    <Skills />
  </main>
  <main id="about" class="wrapper stack gap-20 lg:gap-35">
    <About
      imageSrc={Img2}
      optimizedImageSrc={{
        avif: Img2.avif,
        webp: Img2.webp,
        fallback: Img2.fallback,
        srcsetAvif: Img2.srcsetAvif,
        srcsetWebp: Img2.srcsetWebp,
      }}
      contactInfo={{
        city: dataUser.address.city,
        street: dataUser.address.rue,
        email: dataUser.email,
        phone: dataUser.phone,
        phonePrefix: dataUser.address.indicatif,
        occupation: "Programmer",
        availability: "Freelance Available",
        website: "www.zoddev.site",
      }}
    />
  </main>
  <div class="wrapper stack gap-20 lg:gap-35">
    <Timeline
      client:only="react"
      title="My Journey"
      subtitle="My professional experience and education through the years"
      events={timelineEvents}
    />
  </div>

  <ContactCTA />
  <div class="wrapper stack gap-20 lg:gap-35">
    <Services />
    <section id="work" class="section with-background with-cta">
      <header class="section-header stack gap-2 lg:gap-4">
        <h2>Projets Sélectionnés</h2>
        <p>
          Découvrez ci-dessous quelques-uns de mes projets phares réalisés pour des clients
          au cours des dernières années. Chaque projet démontre mon expertise en développement
          web et mobile.
        </p>
      </header>

      <div class="gallery">
        <Card>
          {
            projects.map((project) => (
              <li>
                <PortfolioPreview project={project} client:load />
              </li>
            ))
          }
        </Card>
      </div>

      <div class="cta">
        <CallToAction href="/work/">
          View All
          <Icon icon="arrow-right" size="1.2em" />
        </CallToAction>
      </div>
    </section>
  </div>

  <ContactCTA />
  <div class="wrapper stack gap-20 lg:gap-48 p-left-right-3-rem">
    <Contact />
  </div>
</Layout>

<style>
  /* Modern Hero Image Styling */
  .hero-image-modern {
    position: relative;
    width: 100%;
    max-width: 500px;
    margin: 0 auto;
  }

  .hero-image-modern img {
    width: 100%;
    height: auto;
    aspect-ratio: 4 / 5;
    object-fit: cover;
    object-position: top;
    border-radius: 2rem;
    box-shadow:
      0 20px 40px rgba(0, 0, 0, 0.3),
      0 0 0 1px rgba(255, 255, 255, 0.1);
    transition: all 0.5s ease;
    position: relative;
    z-index: 2;
  }

  .hero-image-modern:hover img {
    transform: translateY(-10px) scale(1.02);
    box-shadow:
      0 30px 60px rgba(0, 0, 0, 0.4),
      0 0 0 1px rgba(255, 255, 255, 0.2);
  }

  /* Modern Social Media Navigation */
  .hero-social-modern {
    position: absolute;
    bottom: 2rem;
    left: 50%;
    transform: translateX(-50%);
    z-index: 10;
  }

  /* Override default social nav styles for modern layout */
  .hero-social-modern :global(.hero-media-social-nav) {
    display: flex;
    gap: 1rem;
    justify-content: center;
    padding: 1rem;
    background: rgba(0, 0, 0, 0.2);
    backdrop-filter: blur(10px);
    border-radius: 2rem;
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  .hero-social-modern :global(.social-link) {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 3rem;
    height: 3rem;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.1);
    color: var(--gray-200);
    transition: all 0.3s ease;
    border: 1px solid rgba(255, 255, 255, 0.2);
  }

  .hero-social-modern :global(.social-link:hover) {
    background: var(--accent-teal);
    color: white;
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba(20, 184, 166, 0.3);
  }

  /* Responsive adjustments for modern hero */
  @media (max-width: 1024px) {
    .hero-social-modern {
      position: relative;
      bottom: auto;
      left: auto;
      transform: none;
      margin-top: 2rem;
    }
  }

  @media (max-width: 768px) {
    .hero-image-modern {
      max-width: 400px;
    }

    .hero-social-modern :global(.hero-media-social-nav) {
      padding: 0.75rem;
      gap: 0.75rem;
    }

    .hero-social-modern :global(.social-link) {
      width: 2.5rem;
      height: 2.5rem;
    }
  }

  @media (max-width: 480px) {
    .hero-image-modern {
      max-width: 320px;
    }

    .hero-image-modern img {
      border-radius: 1.5rem;
    }

    .hero-social-modern :global(.hero-media-social-nav) {
      padding: 0.5rem;
      gap: 0.5rem;
    }

    .hero-social-modern :global(.social-link) {
      width: 2rem;
      height: 2rem;
    }
  }

  /* ====================================================== */

  .section {
    display: grid;
    gap: 2rem;
  }

  .with-background {
    position: relative;
  }

  .with-background::before {
    --hero-bg: var(--bg-image-subtle-2);

    content: "";
    position: absolute;
    pointer-events: none;
    left: 50%;
    width: 100vw;
    aspect-ratio: calc(2.25 / var(--bg-scale));
    top: 0;
    transform: translateY(-75%) translateX(-50%);
    background:
      url("/assets/backgrounds/noise.png") top center/220px repeat,
      var(--hero-bg) center center / var(--bg-gradient-size) no-repeat,
      var(--gray-999);
    background-blend-mode: overlay, normal, normal, normal;
    mix-blend-mode: var(--bg-blend-mode);
    z-index: -1;
  }

  .with-background.bg-variant::before {
    --hero-bg: var(--bg-image-subtle-1);
  }

  .section-header {
    justify-self: center;
    text-align: center;
    max-width: 50ch;
    font-size: var(--text-md);
    color: var(--gray-300);
  }

  .section-header h3 {
    font-size: var(--text-2xl);
  }

  @media (min-width: 48em) {
    .section {
      grid-template-columns: repeat(4, 1fr);
      grid-template-areas: "header header header header" "gallery gallery gallery gallery";
      gap: 5rem;
    }

    .section.with-cta {
      grid-template-areas: "header header header cta" "gallery gallery gallery gallery";
    }

    .section-header {
      grid-area: header;
      font-size: var(--text-lg);
    }

    .section-header h3 {
      font-size: var(--text-4xl);
    }

    .with-cta .section-header {
      justify-self: flex-start;
      text-align: left;
    }

    .gallery {
      grid-area: gallery;
    }

    .cta {
      grid-area: cta;
    }
  }

  .filters {
    display: flex;
    gap: 1rem;
    justify-content: center;
    margin-bottom: 2rem;
  }

  .filter-btn {
    padding: 0.5rem 1rem;
    border: 2px solid var(--gray-800);
    border-radius: 1.5rem;
    background: var(--gradient-subtle);
    color: var(--gray-300);
    font-size: var(--text-sm);
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .filter-btn:hover {
    color: var(--gray-100);
    border-color: var(--gray-100);
  }

  .filter-btn.active {
    background: var(--gradient-accent);
    border-color: var(--accent-regular);
    color: var(--accent-text-over);
  }

  /* ====================================================== */

  .mention-card {
    display: flex;
    height: 7rem;
    justify-content: center;
    align-items: center;
    text-align: center;
    border: 1px solid var(--gray-800);
    border-radius: 1.5rem;
    color: var(--gray-300);
    background: var(--gradient-subtle);
    box-shadow: var(--shadow-sm);
  }

  @media (min-width: 48em) {
    .mention-card {
      border-radius: 1.5rem;
      height: 9.5rem;
    }
  }
  .p-left-right-3-rem {
    padding: 0rem 3rem;
  }
</style>

<script>
  function setupFilters() {
    const buttons = document.querySelectorAll(".filter-btn");
    const portfolioItems = document.querySelectorAll("article");

    buttons.forEach((btn) => {
      btn.addEventListener("click", () => {
        // Update active button
        buttons.forEach((b) => b.classList.remove("active"));
        btn.classList.add("active");

        // Update filter in React components
        const filter = btn.getAttribute("data-filter") || "all";
        portfolioItems.forEach((item) => {
          // Force re-render of React component by toggling hidden class
          item.classList.add("hidden");
          setTimeout(() => {
            item.classList.remove("hidden");
          }, 10);

          // Update data attribute for filtering
          item.setAttribute("data-active-filter", filter);
        });
      });
    });
  }

  // Setup on page load
  setupFilters();

  // Handle view transitions
  document.addEventListener("astro:page-load", setupFilters);
</script>
