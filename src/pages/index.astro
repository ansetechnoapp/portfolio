---
import { getCollection } from "astro:content";

// image paths
const Img1 = {
  src: "/assets/otty_kevin_optimized/2.png",
  srcsetWebp:
    "/assets/otty_kevin_optimized/2_640w.webp 640w, /assets/otty_kevin_optimized/2_1024w.webp 1024w",
  srcsetAvif:
    "/assets/otty_kevin_optimized/2_640w.avif 640w, /assets/otty_kevin_optimized/2_1024w.avif 1024w",
  webp: "/assets/otty_kevin_optimized/2_optimized.webp",
  avif: "/assets/otty_kevin_optimized/2_optimized.avif",
  fallback: "/assets/otty_kevin_optimized/2.png",
};
const Img2 = {
  src: "/assets/otty_kevin_optimized/6.png",
  srcsetWebp:
    "/assets/otty_kevin_optimized/6_640w.webp 640w, /assets/otty_kevin_optimized/6_1024w.webp 1024w",
  srcsetAvif:
    "/assets/otty_kevin_optimized/6_640w.avif 640w, /assets/otty_kevin_optimized/6_1024w.avif 1024w",
  webp: "/assets/otty_kevin_optimized/6_optimized.webp",
  avif: "/assets/otty_kevin_optimized/6_optimized.avif",
  fallback: "/assets/otty_kevin_optimized/6.png",
};
// Layout import — provides basic page elements: <head>, <nav>, <footer> etc.
import Layout from "../layouts/Layout.astro";

// Component Imports
import CallToAction from "../components/CallToAction.astro";
import Hero from "../components/Hero.astro";
import Icon from "../components/reactJS/Icon";
import Pill from "../components/reactJS/Pill";
import PortfolioPreview from "../components/reactJS/PortfolioPreview";
import Contact from "../components/Contact.astro";
import Services from "../components/Services.astro";
import Card from "../components/card.astro";
import MenuLinkNav from "../components/menuLinkNav.astro";
// Page section components
import ContactCTA from "../components/ContactCTA.astro";
import Skills from "../components/reactJS/Skills";
import HeroMediaSocialNav from "../components/heroMediaSocialNav.astro";
import About from "../components/About.astro";
import Timeline from "../components/reactJS/TimelineExport";
import timelineEvents from "../data/timelineEvents.json";
// import HeroCounter from "../components/heroCounter.astro";
// Content Fetching: List four most recent work projects
const projects = (await getCollection("work"))
  .sort((a, b) => b.data.number - a.data.number)
  .slice(0, 4);

// Full Astro Component Syntax:
// https://docs.astro.build/core-concepts/astro-components/

import dataUser from "../data/User.json";
// import FilterProjects from "../components/reactJS/FilterProjects";
interface Props {
  heroTitle?: string | undefined;
}
const { heroTitle = `I am ${dataUser.firstName} ${dataUser.lastName}` } =
  Astro.props;
---

<Layout
  title={`${dataUser.firstName} ${dataUser.lastName} - Développeur Web & Mobile Freelance`}
  description={`Portfolio de ${dataUser.firstName} ${dataUser.lastName}, développeur web et mobile freelance spécialisé en React, React Native, Astro.js et technologies web modernes.`}
  image="/assets/social-preview.jpg"
  type="website"
>
  <MenuLinkNav namepage="home" />
  <div class="stack gap-15 pt-20">
    <div class="wrapper stack gap-8 lg:gap-20">
      <header id="hero_home" class="hero-container">
        <div class="hero-content">
          <Hero
            title={heroTitle}
            tagline="Freelance web and mobile developer."
            tagline1="As a passionate developer, I create high-end web/mobile apps, delivering projects on time. In search of innovative challenges, I design solutions that perform today... and adapt to tomorrow."
            align="start"
          >
            <!-- <div class="experience-counters">
              <div class="counter-item">
                <span class="counter-number" data-from="0" data-to="7">7</span>
                <span class="counter-label">Years Of Experience</span>
              </div>
              <div class="counter-item">
                <span class="counter-number" data-from="0" data-to="99">99</span
                >
                <span class="counter-label">Client Satisfactions</span>
              </div>
            </div> -->

            <div class="roles">
              <Pill><Icon icon="code" size="1.33em" /> Developer</Pill>
              <a href="" class="contact-link">
                <Pill
                  ><Icon icon="paper-plane-tilt" size="1.33em" /> Contactez-Moi</Pill
                >
              </a>
            </div>
          </Hero>
        </div>

        <div class="hero-image">
          <picture>
            <source
              srcset={Img1.srcsetAvif}
              type="image/avif"
              sizes="(max-width: 768px) 100vw, 480px"
            />
            <source
              srcset={Img1.srcsetWebp}
              type="image/webp"
              sizes="(max-width: 768px) 100vw, 480px"
            />
            <img
              alt=`${dataUser.firstName} ${dataUser.lastName} smiling in a red plaid shirt and tortoise shell glasses`
              width="480"
              height="620"
              src={Img1.fallback}
              loading="eager"
              decoding="async"
            />
          </picture>
        </div>
        <HeroMediaSocialNav />

        <div class="image-backdrop"></div>
      </header>
    </div>
  </div>

  <main class="wrapper stack gap-20 lg:gap-35">
    <Skills />
  </main>
  <main id="about" class="wrapper stack gap-20 lg:gap-35">
    <About
      imageSrc={Img2}
      optimizedImageSrc={{
        avif: Img2.avif,
        webp: Img2.webp,
        fallback: Img2.fallback,
        srcsetAvif: Img2.srcsetAvif,
        srcsetWebp: Img2.srcsetWebp,
      }}
      contactInfo={{
        city: dataUser.address.city,
        street: dataUser.address.rue,
        email: dataUser.email,
        phone: dataUser.phone,
        phonePrefix: dataUser.address.indicatif,
        occupation: "Programmer",
        availability: "Freelance Available",
        website: "www.anscod.online",
      }}
    />
  </main>
  <div class="wrapper stack gap-20 lg:gap-35">
    <Timeline
      client:only="react"
      title="My Journey"
      subtitle="My professional experience and education through the years"
      events={timelineEvents}
    />
  </div>

  <ContactCTA />
  <div class="wrapper stack gap-20 lg:gap-35">
    <Services />
    <section id="work" class="section with-background with-cta">
      <header class="section-header stack gap-2 lg:gap-4">
        <h3>Selected Work</h3>
        <p>
          Take a look below at some of my featured work for clients from the
          past few years.
        </p>
      </header>

      <div class="gallery">
        <Card>
          {
            projects.map((project) => (
              <li>
                <PortfolioPreview project={project} client:load />
              </li>
            ))
          }
        </Card>
      </div>

      <div class="cta">
        <CallToAction href="/work/">
          View All
          <Icon icon="arrow-right" size="1.2em" />
        </CallToAction>
      </div>
    </section>
  </div>

  <ContactCTA />
  <div class="wrapper stack gap-20 lg:gap-48 p-left-right-3-rem">
    <Contact />
  </div>
</Layout>

<style>
  /* Base styles for the hero container */
  .hero-container {
    display: grid;
    grid-template-columns: 1fr;
    gap: 3rem;
    padding: 2rem 1rem;
    position: relative;
    overflow: hidden;
  }

  /* Hero content styles */
  .hero-content {
    z-index: 2;
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  /* Experience counters */
  .experience-counters {
    display: flex;
    justify-content: center;
    gap: 2rem;
    margin: 2rem 0;
    width: 100%;
  }

  .counter-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 1rem;
    border-radius: 1rem;
    background: rgba(0, 0, 0, 0.05);
    backdrop-filter: blur(8px);
    transition:
      transform 0.3s ease,
      box-shadow 0.3s ease;
    position: relative;
  }

  .counter-item:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
  }

  .counter-item::before {
    content: "";
    position: absolute;
    inset: 0;
    border-radius: 1rem;
    padding: 2px;
    background: linear-gradient(135deg, var(--accent-regular), transparent);
    -webkit-mask:
      linear-gradient(#fff 0 0) content-box,
      linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .counter-item:hover::before {
    opacity: 1;
  }

  .counter-number {
    font-size: 1.5rem;
    font-weight: bold;
    color: var(--accent-regular);
    position: relative;
  }

  .counter-number::after {
    content: "+";
    position: absolute;
    font-size: 1.5rem;
    top: 0;
    right: -15px;
  }

  .counter-label {
    font-size: 0.9rem;
    color: var(--gray-300);
    margin-top: 0.5rem;
  }

  /* Roles styling */
  .roles {
    display: flex;
    gap: 1rem;
    /* flex-wrap: wrap; */
    margin-top: 1rem;
    justify-content: center;
  }

  .contact-link {
    position: relative;
    transform: translateZ(0);
    overflow: hidden;
    border-radius: 9999px;
  }

  .contact-link::before {
    content: "";
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.2),
      transparent
    );
    animation: shine 3s infinite;
    z-index: 1;
  }

  @keyframes shine {
    0% {
      left: -100%;
    }
    20% {
      left: 100%;
    }
    100% {
      left: 100%;
    }
  }

  /* Hero image styling */
  .hero-image {
    position: relative;
    margin: 0 auto;
    transform: translateZ(0);
  }

  .hero-image img {
    aspect-ratio: 4 / 5;
    object-fit: cover;
    object-position: top;
    border-radius: 2rem;
    box-shadow: var(--shadow-md);
    transition: transform 0.5s ease;
    z-index: 2;
    position: relative;
  }

  .image-backdrop {
    position: absolute;
    bottom: 5%;
    left: 10%;
    width: 85%;
    height: 100%;
    background: var(--accent-regular);
    filter: blur(50px);
    opacity: 0.3;
    border-radius: 50%;
    z-index: -100;
    animation: pulse 5s infinite alternate ease-in-out;
  }

  @keyframes pulse {
    0% {
      transform: scale(1);
      opacity: 0.3;
    }
    100% {
      transform: scale(1.1);
      opacity: 0.5;
    }
  }

  /* Media queries for responsive design */
  @media (min-width: 48em) {
    .hero-container {
      padding: 3rem 2rem;
      gap: 4rem;
    }

    .experience-counters {
      gap: 3rem;
    }

    .counter-number {
      font-size: 1.5rem;
    }

    .counter-label {
      font-size: 1rem;
    }

    .hero-image img {
      border-radius: 3rem;
    }
  }

  @media (min-width: 62em) {
    .hero-container {
      grid-template-columns: 1.5fr 1fr;
      align-items: center;
      gap: 2rem;
    }

    .hero-content {
      align-items: flex-start;
    }

    .experience-counters {
      justify-content: flex-start;
    }

    .roles {
      justify-content: flex-start;
    }
  }

  @media (min-width: 75em) {
    .hero-container {
      padding: 4rem 3rem;
      min-height: 90vh;
    }

    .hero-content {
      justify-content: center;
    }

    .hero-image {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      height: 100%;
    }

    .hero-image img {
      max-height: 80vh;
    }

    /* Add subtle floating animation */
    .hero-image img {
      animation: float 6s ease-in-out infinite;
    }

    @keyframes float {
      0% {
        transform: translateY(0px);
      }
      50% {
        transform: translateY(-15px);
      }
      100% {
        transform: translateY(0px);
      }
    }
  }

  /* ====================================================== */

  .section {
    display: grid;
    gap: 2rem;
  }

  .with-background {
    position: relative;
  }

  .with-background::before {
    --hero-bg: var(--bg-image-subtle-2);

    content: "";
    position: absolute;
    pointer-events: none;
    left: 50%;
    width: 100vw;
    aspect-ratio: calc(2.25 / var(--bg-scale));
    top: 0;
    transform: translateY(-75%) translateX(-50%);
    background:
      url("/assets/backgrounds/noise.png") top center/220px repeat,
      var(--hero-bg) center center / var(--bg-gradient-size) no-repeat,
      var(--gray-999);
    background-blend-mode: overlay, normal, normal, normal;
    mix-blend-mode: var(--bg-blend-mode);
    z-index: -1;
  }

  .with-background.bg-variant::before {
    --hero-bg: var(--bg-image-subtle-1);
  }

  .section-header {
    justify-self: center;
    text-align: center;
    max-width: 50ch;
    font-size: var(--text-md);
    color: var(--gray-300);
  }

  .section-header h3 {
    font-size: var(--text-2xl);
  }

  @media (min-width: 48em) {
    .section {
      grid-template-columns: repeat(4, 1fr);
      grid-template-areas: "header header header header" "gallery gallery gallery gallery";
      gap: 5rem;
    }

    .section.with-cta {
      grid-template-areas: "header header header cta" "gallery gallery gallery gallery";
    }

    .section-header {
      grid-area: header;
      font-size: var(--text-lg);
    }

    .section-header h3 {
      font-size: var(--text-4xl);
    }

    .with-cta .section-header {
      justify-self: flex-start;
      text-align: left;
    }

    .gallery {
      grid-area: gallery;
    }

    .cta {
      grid-area: cta;
    }
  }

  .filters {
    display: flex;
    gap: 1rem;
    justify-content: center;
    margin-bottom: 2rem;
  }

  .filter-btn {
    padding: 0.5rem 1rem;
    border: 2px solid var(--gray-800);
    border-radius: 1.5rem;
    background: var(--gradient-subtle);
    color: var(--gray-300);
    font-size: var(--text-sm);
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .filter-btn:hover {
    color: var(--gray-100);
    border-color: var(--gray-100);
  }

  .filter-btn.active {
    background: var(--gradient-accent);
    border-color: var(--accent-regular);
    color: var(--accent-text-over);
  }

  /* ====================================================== */

  .mention-card {
    display: flex;
    height: 7rem;
    justify-content: center;
    align-items: center;
    text-align: center;
    border: 1px solid var(--gray-800);
    border-radius: 1.5rem;
    color: var(--gray-300);
    background: var(--gradient-subtle);
    box-shadow: var(--shadow-sm);
  }

  @media (min-width: 48em) {
    .mention-card {
      border-radius: 1.5rem;
      height: 9.5rem;
    }
  }
  .p-left-right-3-rem {
    padding: 0rem 3rem;
  }
</style>

<script>
  function setupFilters() {
    const buttons = document.querySelectorAll(".filter-btn");
    const portfolioItems = document.querySelectorAll("article");

    buttons.forEach((btn) => {
      btn.addEventListener("click", () => {
        // Update active button
        buttons.forEach((b) => b.classList.remove("active"));
        btn.classList.add("active");

        // Update filter in React components
        const filter = btn.getAttribute("data-filter") || "all";
        portfolioItems.forEach((item) => {
          // Force re-render of React component by toggling hidden class
          item.classList.add("hidden");
          setTimeout(() => {
            item.classList.remove("hidden");
          }, 10);

          // Update data attribute for filtering
          item.setAttribute("data-active-filter", filter);
        });
      });
    });
  }

  // Setup on page load
  setupFilters();

  // Handle view transitions
  document.addEventListener("astro:page-load", setupFilters);
</script>
