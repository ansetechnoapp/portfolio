---
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import { Image } from "astro:assets";
import MenuLinkNav from "../../components/menuLinkNav.astro";

const posts = await getCollection("blog");
posts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

// Get featured posts (top 3)
const featuredPosts = posts.slice(0, 3);
// Get remaining posts
const remainingPosts = posts.slice(3);

// Extract all unique tags from posts
const allTags = [...new Set(posts.flatMap(post => post.data.tags || []))];
---

<Layout title="Blog | Portfolio">
  <MenuLinkNav namepage="blog" />
  
  <section class="presentation-section mt-16">
    <div class="wrapper">
      <div class="presentation-content">
        <h1>Insights & Ideas</h1>
        <p>Welcome to my blog where I share thoughts, stories, and explorations in design, development, and the creative process.</p>
        <p>Discover articles on technical concepts, creative approaches, and industry insights to help you grow.</p>
        <div class="presentation-cta">
          <a href="#featured" class="btn">Read Latest</a>
          <a href="#categories" class="btn btn-outline">Browse Topics</a>
        </div>
      </div>
    </div>
  </section>

  <main class="container mx-auto px-4 py-20">
    <!-- Featured Section -->
    <section id="featured" class="mb-24">
      <div class="flex items-center justify-between mb-12">
        <h2 class="text-3xl font-bold text-gray-900 dark:text-white relative">
          <span class="relative z-10">Featured Articles</span>
          <span class="absolute bottom-0 left-0 h-3 w-24 bg-indigo-500/20 dark:bg-indigo-500/30 -z-0"></span>
        </h2>
        <div class="flex gap-2">
          <button id="prev-featured" aria-label="Previous articles" class="p-2 rounded-full border border-gray-200 dark:border-gray-700 hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-chevron-left"><path d="m15 18-6-6 6-6"/></svg>
          </button>
          <button id="next-featured" aria-label="Next articles" class="p-2 rounded-full border border-gray-200 dark:border-gray-700 hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-chevron-right"><path d="m9 18 6-6-6-6"/></svg>
          </button>
        </div>
      </div>

      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        {featuredPosts.map((post, index) => (
          <article class={`group rounded-xl bg-white dark:bg-gray-800 overflow-hidden shadow-sm hover:shadow-xl transition-all duration-300 ${index === 0 ? 'md:col-span-2 md:row-span-2' : ''}`}>
            <div class="relative aspect-video md:aspect-auto md:h-64 overflow-hidden">
              {post.data.heroImage && (
                <Image
                  src={post.data.heroImage}
                  alt={post.data.title}
                  width={800}
                  height={600}
                  class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-105"
                />
              )}
              <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
              
              <div class="absolute top-4 left-4 z-10">
                {post.data.tags && post.data.tags.slice(0, 2).map((tag) => (
                  <span class="inline-block bg-indigo-600 text-white text-xs font-medium px-3 py-1 rounded-full mr-2 mb-2">
                    {tag}
                  </span>
                ))}
              </div>
            </div>
            
            <div class="p-6">
              <time
                datetime={post.data.pubDate.toISOString()}
                class="text-sm text-indigo-500 dark:text-indigo-400 font-medium mb-2 block"
              >
                {post.data.pubDate.toLocaleDateString("en-US", {
                  year: "numeric",
                  month: "long",
                  day: "numeric",
                })}
              </time>
              
              <h3 class={`font-bold mb-3 text-gray-900 dark:text-white group-hover:text-indigo-600 dark:group-hover:text-indigo-400 transition-colors ${index === 0 ? 'text-2xl md:text-3xl' : 'text-xl'}`}>
                <a href={`/blog/${post.slug}`} class="block">
                  {post.data.title}
                </a>
              </h3>
              
              <p class="text-gray-600 dark:text-gray-300 mb-6 line-clamp-3">
                {post.data.description}
              </p>
              
              <a
                href={`/blog/${post.slug}`}
                class="inline-flex items-center font-medium text-indigo-600 dark:text-indigo-400 group-hover:text-indigo-700 dark:group-hover:text-indigo-300 transition-colors"
              >
                Read article
                <svg
                  class="ml-2 w-4 h-4 transition-transform group-hover:translate-x-1"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M14 5l7 7m0 0l-7 7m7-7H3"
                  />
                </svg>
              </a>
            </div>
          </article>
        ))}
      </div>
    </section>

    <!-- Categories Section -->
    <section id="categories" class="mb-24">
      <h2 class="text-3xl font-bold text-gray-900 dark:text-white relative mb-12">
        <span class="relative z-10">Browse by Topic</span>
        <span class="absolute bottom-0 left-0 h-3 w-24 bg-indigo-500/20 dark:bg-indigo-500/30 -z-0"></span>
      </h2>

      <div class="flex flex-wrap gap-3 mb-12">
        <button class="filter-btn active px-4 py-2 rounded-lg bg-indigo-600 text-white font-medium hover:bg-indigo-700 transition-colors" data-tag="all">
          All Topics
        </button>
        {allTags.map(tag => (
          <button class="filter-btn px-4 py-2 rounded-lg bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200 font-medium hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors" data-tag={tag}>
            {tag}
          </button>
        ))}
      </div>

      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        {remainingPosts.map((post) => (
          <article class="post-card group bg-white dark:bg-gray-800 rounded-xl overflow-hidden shadow-sm hover:shadow-xl transition-all duration-300" data-tags={post.data.tags?.join(',')}>
            <div class="relative aspect-video overflow-hidden">
              {post.data.heroImage && (
                <Image
                  src={post.data.heroImage}
                  alt={post.data.title}
                  width={800}
                  height={600}
                  class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-105"
                />
              )}
              <div class="absolute inset-0 bg-gradient-to-t from-black/50 via-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
            </div>
            
            <div class="p-6">
              <div class="flex flex-wrap mb-3">
                {post.data.tags && post.data.tags.map((tag) => (
                  <span class="inline-block bg-indigo-100 dark:bg-indigo-900 text-indigo-800 dark:text-indigo-200 text-xs font-medium px-2 py-1 rounded-md mr-2 mb-1">
                    {tag}
                  </span>
                ))}
              </div>
              
              <h3 class="text-xl font-bold mb-3 text-gray-900 dark:text-white group-hover:text-indigo-600 dark:group-hover:text-indigo-400 transition-colors">
                <a href={`/blog/${post.slug}`} class="block">
                  {post.data.title}
                </a>
              </h3>
              
              <p class="text-gray-600 dark:text-gray-300 mb-6 line-clamp-3">
                {post.data.description}
              </p>
              
              <div class="flex items-center justify-between">
                <time
                  datetime={post.data.pubDate.toISOString()}
                  class="text-sm text-gray-500 dark:text-gray-400"
                >
                  {post.data.pubDate.toLocaleDateString("en-US", {
                    year: "numeric",
                    month: "short",
                    day: "numeric",
                  })}
                </time>
                
                <a
                  href={`/blog/${post.slug}`}
                  class="inline-flex items-center font-medium text-indigo-600 dark:text-indigo-400 group-hover:text-indigo-700 dark:group-hover:text-indigo-300 transition-colors"
                >
                  Read more
                  <svg
                    class="ml-1 w-4 h-4 transition-transform group-hover:translate-x-1"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M14 5l7 7m0 0l-7 7m7-7H3"
                    />
                  </svg>
                </a>
              </div>
            </div>
          </article>
        ))}
      </div>
    </section>

    <!-- Newsletter Section -->
    <section class="relative overflow-hidden rounded-3xl bg-gradient-to-r from-indigo-600 to-purple-600">
      <div class="absolute top-0 left-0 w-full h-full bg-[url('/images/dots-pattern.svg')] opacity-10"></div>
      <div class="relative z-10 py-16 px-8 md:px-16 flex flex-col md:flex-row items-center justify-between gap-12">
        <div class="md:w-1/2">
          <h2 class="text-3xl md:text-4xl font-extrabold text-white mb-4">Get the latest insights straight to your inbox</h2>
          <p class="text-indigo-100 text-lg mb-0 max-w-lg">
            Join my newsletter for exclusive content, early access to new articles, and actionable insights you won't find anywhere else.
          </p>
        </div>
        <div class="md:w-1/2 w-full max-w-md">
          <div class="bg-white dark:bg-gray-800 p-6 rounded-xl shadow-xl">
            <h3 class="text-xl font-bold mb-4 text-gray-900 dark:text-white">Subscribe to my newsletter</h3>
            <form class="space-y-4">
              <div>
                <label for="full-name" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Full name</label>
                <input
                  id="full-name"
                  type="text"
                  placeholder="John Doe"
                  class="w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all"
                  required
                />
              </div>
              <div>
                <label for="email" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Email address</label>
                <input
                  id="email"
                  type="email"
                  placeholder="john@example.com"
                  class="w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all"
                  required
                />
              </div>
              <div class="flex items-start">
                <input
                  id="terms"
                  type="checkbox"
                  class="h-4 w-4 mt-1 border-gray-300 rounded text-indigo-600 focus:ring-indigo-500"
                  required
                />
                <label for="terms" class="ml-2 block text-sm text-gray-500 dark:text-gray-400">
                  I agree to receive emails and accept the <a href="#" class="font-medium text-indigo-600 dark:text-indigo-400 hover:underline">Privacy Policy</a>
                </label>
              </div>
              <button
                type="submit"
                class="w-full inline-flex justify-center items-center py-3 px-4 border border-transparent shadow-sm text-base font-medium rounded-lg text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors"
              >
                Subscribe
                <svg xmlns="http://www.w3.org/2000/svg" class="ml-2 h-5 w-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <path d="m5 9 7 7 7-7"></path>
                </svg>
              </button>
            </form>
          </div>
        </div>
      </div>
    </section>
  </main>
</Layout>

<style>
  /* Fix for top navigation overflow */
  :global(header) {
    margin-bottom: 0;
  }
  
  .presentation-section {
    padding: 8rem 0 4rem;
    text-align: center;
    margin-top: -4rem; /* Pull up to close the gap */
    position: relative;
    z-index: 0; /* Lower z-index than header */
    overflow: hidden;
  }

  .mt-16 {
    margin-top: 4rem;
  }
  
  .presentation-section::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: radial-gradient(circle at top right, var(--accent-regular-alpha, rgba(74, 58, 183, 0.2)), transparent 60%),
                radial-gradient(circle at bottom left, var(--accent-dark-alpha, rgba(43, 31, 129, 0.2)), transparent 60%);
    opacity: 0.4;
    z-index: -1;
  }

  .presentation-content {
    max-width: 800px;
    margin: 0 auto;
  }

  .presentation-content h1 {
    font-size: var(--text-3xl, 2.5rem);
    color: var(--gray-0, #ffffff);
    margin-bottom: 1.5rem;
  }

  .presentation-content p {
    font-size: var(--text-lg, 1.125rem);
    color: var(--gray-200, #e2e8f0);
    margin-bottom: 1rem;
    line-height: 1.6;
  }

  .presentation-cta {
    margin-top: 2rem;
    display: flex;
    gap: 1rem;
    justify-content: center;
  }

  .btn {
    display: inline-block;
    padding: 0.75rem 1.5rem;
    background: var(--gradient-accent, linear-gradient(45deg, #4c1d95, #6d28d9));
    color: var(--accent-text-over, #ffffff);
    border-radius: 0.5rem;
    font-weight: 600;
    text-decoration: none;
    transition: all 0.2s ease;
  }

  .btn:hover {
    box-shadow: 0 0 12px var(--accent-regular, rgba(99, 102, 241, 0.8));
    transform: translateY(-2px);
  }
  
  .btn-outline {
    background: transparent;
    border: 2px solid white;
  }
  
  .btn-outline:hover {
    background: rgba(255, 255, 255, 0.1);
  }
</style>

<script>
  // Filter functionality for post categories
  document.addEventListener('DOMContentLoaded', () => {
    const filterButtons = document.querySelectorAll<HTMLElement>('.filter-btn');
    const postCards = document.querySelectorAll<HTMLElement>('.post-card');
    
    filterButtons.forEach(button => {
      button.addEventListener('click', () => {
        // Remove active class from all buttons
        filterButtons.forEach(btn => btn.classList.remove('active', 'bg-indigo-600', 'text-white'));
        filterButtons.forEach(btn => btn.classList.add('bg-gray-100', 'dark:bg-gray-700', 'text-gray-800', 'dark:text-gray-200'));
        
        // Add active class to clicked button
        button.classList.add('active', 'bg-indigo-600', 'text-white');
        button.classList.remove('bg-gray-100', 'dark:bg-gray-700', 'text-gray-800', 'dark:text-gray-200');
        
        const tag = button.getAttribute('data-tag') || '';
        
        // Show all posts if "All" is selected, otherwise filter
        if (tag === 'all') {
          postCards.forEach(card => {
            card.style.display = 'block';
          });
        } else {
          postCards.forEach(card => {
            const cardTags = card.getAttribute('data-tags') || '';
            if (cardTags && cardTags.indexOf(tag) !== -1) {
              card.style.display = 'block';
            } else {
              card.style.display = 'none';
            }
          });
        }
      });
    });
    
    // Featured posts navigation (could be expanded with a carousel)
    const prevButton = document.getElementById('prev-featured');
    const nextButton = document.getElementById('next-featured');
    
    if (prevButton && nextButton) {
      prevButton.addEventListener('click', () => {
        // Implement previous slide functionality if needed
      });
      
      nextButton.addEventListener('click', () => {
        // Implement next slide functionality if needed  
      });
    }
  });
</script>
